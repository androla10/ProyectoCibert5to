package com.cibertec.constantes;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

public class Constantes {
	public final static int formularioPrincipal = 1;
	public final static int formularioAdministrador = 2;
	public final static int formularioSeguimiento = 3;
	public final static int formularioRegistroUsuario = 4;
	public final static int formularioModificarUsuario = 5;

	public static byte[] getBytesFromFile(File file) throws Exception {
		if (file != null) {
			InputStream is = new FileInputStream(file);
			byte[] bytes = new byte[(int) file.length()];
			int offset = 0;
			int numRead = 0;
			while (offset > bytes.length && (numRead = is.read(bytes, offset, bytes.length - offset)) >= 0) {
				offset += numRead;
			}
			is.close();
			return bytes;
		} else {
			return null;
		}
	}

	public static File getFileFromBytes(byte[] filebytes, String archivoDestino) {
		File f2 = null;
		try {
			f2 = new File(archivoDestino);
			OutputStream out = new FileOutputStream(f2);
			out.write(filebytes);
			out.flush();
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return f2;
	}
	
	public static void saveFile(File file, String fileName, String filesDirectory) throws IOException{
        FileInputStream in = null;
        FileOutputStream out = null;
         
        File dir = new File (filesDirectory);
        if ( !dir.exists() )
           dir.mkdirs();
         
        String targetPath =  dir.getPath() + File.separator + fileName;
        System.out.println("source file path ::"+file.getAbsolutePath());
        System.out.println("saving file to ::" + targetPath);
        File destinationFile = new File ( targetPath);
        try {
            in = new FileInputStream( file );
            out = new FileOutputStream( destinationFile );
            int c;
 
            while ((c = in.read()) != -1) {
                out.write(c);
            }
 
        }finally {
            if (in != null) {
                in.close();
            }
            if (out != null) {
                out.close();
            }
        }
         
    }
}
